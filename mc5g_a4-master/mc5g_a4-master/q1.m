%% MIMO channel matrix H for symmetric 3x3 array of isotropic 0dB gain antennas at Tx/Rx
function H = q1(Frequency, Tx_height, Tx_spacing,  Rx_height, Rx_spacing, Room_height, Rx_Tx_spacing, ReflectionCoeff)
c = 300000000; % m/s
if ~exist('Frequency','var'); Frequency=5e9; end
if ~exist('Tx_height','var'); Tx_height=3; end
if ~exist('Tx_spacing','var'); Tx_spacing=30e-3; end
if ~exist('Rx_height','var'); Rx_height=2.5; end
if ~exist('Rx_spacing','var'); Rx_spacing=30e-3; end
if ~exist('Room_height','var'); Room_height=5; end
if ~exist('Rx_Tx_spacing','var'); Rx_Tx_spacing=5; end
if ~exist('ReflectionCoeff','var'); ReflectionCoeff=-1; end

Tx_spacings = [1 1 1].'*[-Tx_spacing 0 +Tx_spacing];
Tx_heights = [1 1 1].' * [Tx_height + Tx_spacing, Tx_height, Tx_height - Tx_spacing];

Rx_spacings = ([1 1 1].'*[-Rx_spacing 0 +Rx_spacing]).';
Rx_heights = ([1 1 1].'*[Rx_height + Rx_spacing, Rx_height, Rx_height - Rx_spacing]).';

d_direct = sqrt( ...
kron(ones(3),Tx_spacings+Rx_Tx_spacing+Rx_spacings).^2 ...
 + kron(Tx_heights - Rx_heights,ones(3)).^2 ...
);

d_floor = sqrt( ...
kron(ones(3),Tx_spacings+Rx_Tx_spacing+Rx_spacings).^2 ...
 + kron(Tx_heights + Rx_heights,ones(3)).^2 ...
);

d_ceil = sqrt( ...
kron(ones(3),Tx_spacings+Rx_Tx_spacing+Rx_spacings).^2 ...
 + kron(2*Room_height - (Tx_heights + Rx_heights),ones(3)).^2 ...
);

k=(2*pi*Frequency)/c;

H = 1/(2*k)*( ...
    1./d_direct.*exp(-1j*k*d_direct) ...
    + ReflectionCoeff./d_floor.*exp(-1j*k*d_floor) ...
    + ReflectionCoeff./d_ceil.*exp(-1j*k*d_ceil) ...
    );

end
